---
# The following 3 tasks replicate what the raspi-config tool does when setting
# up auto-login to the CLI

- name: Make the CLI the default boot target
  file:
    src: /lib/systemd/system/multi-user.target
    dest: /etc/systemd/system/default.target
    owner: root
    group: root
    state: link
  become: yes

- name: Write the kiosk user into the auto-login service
  lineinfile:
    path: /etc/systemd/system/autologin@.service
    state: present
    regexp: '^ExecStart=-/sbin/agetty --autologin \S+ (.*)$'
    line: "ExecStart=-/sbin/agetty --autologin {{ raspi_kiosk_user }} \\1"
    backrefs: yes
  become: yes

- name: Set the first VT to start the auto-login service
  file:
    src: /etc/systemd/system/autologin@.service
    dest: /etc/systemd/system/getty.target.wants/getty@tty1.service
    owner: root
    group: root
    state: link
  become: yes

- name: Install all packages requested by applications
  apt:
    name: "{{ item }}"
    state: present
    install_recommends: no
  with_items: "{{ raspi_kiosk_apps | selectattr('packages', 'defined') | rejectattr('packages', 'none') | sum(attribute='packages', start=[]) | unique }}"
  become: yes

- name: Assemble the main script and copy it to the client
  template:
    src: raspi-kiosk.sh.j2
    dest: "{{ '~' + raspi_kiosk_user | expanduser }}/raspi-kiosk.sh"
    mode: 0755
    owner: "{{ raspi_kiosk_user }}"
    group: "{{ raspi_kiosk_user }}"
  become: yes

- name: Add the main script to the bashrc of the kiosk user 
  lineinfile:
    path: "{{ '~' + raspi_kiosk_user | expanduser }}/.bashrc"
    line: '~/raspi-kiosk.sh'
    state: present
    insertafter: EOF
  become: yes

